//file:noinspection GroovyAssignabilityCheck
buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

apply plugin: 'org.spongepowered.mixin'

group = mod_name
version = mod_version

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

jarJar.enable()

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')
            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), "-mixin.config=arbor.mixins.json"
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven { url = 'https://maven.minecraftforge.net/' }
    maven {
        name "cf"
        url "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://maven.tterrag.com/"
        content {
            includeGroup("com.tterrag.registrate")
            includeGroup("com.simibubi.create")
            includeGroup("com.jozufozu.flywheel")
        }
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = "Resourceful Bees Maven"
        url = "https://maven.resourcefulbees.com/repository/maven-public/"
    }
    maven { url = "https://maven.firstdarkdev.xyz/snapshots" } // LDLib

}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.28'
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("com.gregtechceu.gtceu:gtceu-forge-${minecraft_version}:${gtCeuVersion}"){ transitive = false }
    implementation fg.deobf("com.lowdragmc.ldlib:ldlib-forge-${minecraft_version}:${ldLibVersion}"){ transitive = false }
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrateForgeVersion}")
    implementation fg.deobf("dev.toma.configuration:configuration-forge-1.20.1:2.2.0")

    runtimeOnly fg.deobf("curse.maven:jade-324717:4801177")

    implementation fg.deobf("dev.emi:emi-forge:${emiVersion}")
    runtimeOnly fg.deobf("curse.maven:jei-238222:4712868")
    // implementation fg.deobf("curse.maven:avaritia-reforged-623969:4750870")

    implementation fg.deobf("com.simibubi.create:create-1.20.1:0.5.1.f-26:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-1.20.1:0.6.10-7")

    implementation fg.deobf("earth.terrarium.botarium:botarium-forge-${minecraft_version}:${botarium_version}")
    implementation fg.deobf("curse.maven:cloth-config-348521:4633444")
    implementation fg.deobf("curse.maven:ad-astra-635042:${ad_astra_cf_version}")
    implementation fg.deobf("com.teamresourceful.resourcefullib:resourcefullib-forge-${minecraft_version}:${resourcefullib_version}")
    implementation fg.deobf("com.teamresourceful.resourcefulconfig:resourcefulconfig-forge-${minecraft_version}:${resourcefulconfig_version}")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.1"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.3.1")) { jarJar.ranged(it, "[0.3.1,)") }
}

// Example for how to replace properties in your mods.toml file
tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jarJar') {
    // ...
}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": mod_authors,
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // The settings below make sure that your build is reproducible
    // More information at https://docs.gradle.org/current/userguide/working_with_files.html#sec:reproducible_archives
    preserveFileTimestamps = false
    reproducibleFileOrder = true

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}